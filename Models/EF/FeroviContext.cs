// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Ferovi.Models.EF;

public partial class FeroviContext : DbContext
{
    public FeroviContext(DbContextOptions<FeroviContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Iconos> Iconos { get; set; }

    public virtual DbSet<MenuPrincipal> MenuPrincipal { get; set; }

    public virtual DbSet<RegistroAcceso> RegistroAcceso { get; set; }

    public virtual DbSet<Roles> Roles { get; set; }

    public virtual DbSet<Usuarios> Usuarios { get; set; }

    public virtual DbSet<Usuarios_Roles> Usuarios_Roles { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<MenuPrincipal>(entity =>
        {
            entity.HasOne(d => d.IdIconoNavigation).WithMany(p => p.MenuPrincipal).HasConstraintName("FK_MenuPrincipal_Iconos");
        });

        modelBuilder.Entity<RegistroAcceso>(entity =>
        {
            entity.HasOne(d => d.IdUsuarioNavigation).WithMany(p => p.RegistroAcceso)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RegistroAcceso_Usuarios");
        });

        modelBuilder.Entity<Usuarios>(entity =>
        {
            entity.Property(e => e.FechaCreacion).HasDefaultValueSql("(getdate())");
        });

        modelBuilder.Entity<Usuarios_Roles>(entity =>
        {
            entity.HasOne(d => d.IdRolNavigation).WithMany(p => p.Usuarios_Roles)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Usuarios_Roles_Roles");

            entity.HasOne(d => d.IdUsuarioNavigation).WithMany(p => p.Usuarios_Roles)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Usuarios_Roles_Usuarios");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}